import barnum
from database_setup import Project, Base, Student, Pref
from sqlalchemy.orm import sessionmaker
from sqlalchemy import create_engine
from flask import session as login_session
# from server.dao import (Address, Group, Person, PersonEmail, PersonPhone,
#                         User, Position, Privilege)
3
engine = create_engine('sqlite:///testing.db')
Base.metadata.bind = engine

DBSession = sessionmaker(bind=engine)
session = DBSession()

#THERE IS NO PROJECT Q

A = Project(name='Lessons from a Student Athlete: Why the Grind Never Stops')
B = Project(name='Free Food!: What I learned about the LAUSDs free lunch program')
C = Project(name='Stories of Struggle, Victory, and Love: The Black Male Experience at Chadwick')
D = Project(name='Mirrors are your friend: Learning to love your body')
E = Project(name='AllRight: observing extreme political partisanship through FaceBook')
F = Project(name='A Safer Environment: Chadwic3k and Mental Health')
G = Project(name='The Reality of the SAT/ACT')
H = Project(name='Emotional Abuse: A Closer Look at Pain Unseen')
I = Project(name='The Fifth Domain of Warfare')
J = Project(name='Nuclear Power: Friend or Foe?')
K = Project(name='Saving the Earth One Bite at a Time')
L = Project(name='O.E.,O.E., Never Much Love When We Go On O.E.')
M = Project(name='A Look into Americas Growing Health Epidemic')
N = Project(name='Mapping for Measles')
O = Project(name='A Dogs Purpose: Therapy Dogs')
P = Project(name='Ocean Friendly Restaurants in the South Bay')
R = Project(name='Triggered: What Most People Dont Know About Sports Injury')
S = Project(name='Spotlight: Using Childrens Theater to Enhance Multiple Intelligences')
T = Project(name='Bully the Bullies: The New Anti Cyberbullying Approach')
U = Project(name='Expanding Therapeutic Equestrian in Palos Verdes')
V = Project(name='Preventing Childhood Obesity in the South Bay')
W = Project(name='Healthy Habits To-Go: Ways to Efficiently Maintain a Balanced Lifestyle')
X = Project(name='Addressing the Systemic Risk of the Big Three: Depression, Anxiety, and Drug Abuse')
Y = Project(name='The Quality of Life in Spinal Muscular Atrophy Children')
Z = Project(name='Exposing the NCAA: The Rights of College Athletes')
AA = Project(name='AllRight: observing extreme political partisanship through FaceBook')
AB = Project(name='NEWSFLASH: Theater is more than just a form of entertainment')
AC = Project(name='Multiple Perspectives: Is my opinion really that controversial')
AD = Project(name='The Unshakeable Connection Between the Mind and Body')
AE = Project(name='Reading More Into Mental Illnesses and Homelessness: The Use of Libraries to Combat the Mentally Ill and Homeless of Long Beach')
AF = Project(name='Chadwick: Division 1 Sleep Deprivation')
AG = Project(name='The Anonymous Project')
AH = Project(name='Animal Advocacy: The Process of Meaningful Change')
AI = Project(name='A Look into the L.A. Foster Care System through Art')
AJ = Project(name='Eating Away at the Earth: The Meat Industrys Impact on the Environment and the Future of Meat')
AK = Project(name='Obesity: Quite a Large Problem if You Ask Me')
AL = Project(name='Stripping Away Negative Body Image: Medias Promotion of an Unattainable Ideal')
AM = Project(name='Blaming the Victims: The Mistreatment of Sexual Assault Cases at Educational Institutions')
AN = Project(name='The Spotlight Project')
AO = Project(name='If You Come To This Presentation, Ill Let You Nap')
AP = Project(name='Puzzled? Heres an Easy Way to Destress')
AQ = Project(name='Making Bank the Smart Way: What Chadwick Failed to Teach You')
AR = Project(name='Creating a Pen Pal Program to Help Orphans')
AS = Project(name='Houseless Not Homeless!')
AT = Project(name='Craving Companionship: Promoting Multigenerational Relationships to Combat Elderly Loneliness')
AU = Project(name='Programming Your Mind:  How To Edit Habits')
AV = Project(name='JAWS: Fixing Sharks Bad Reputations')
AW = Project(name='AllRight: observing extreme political partisanship through FaceBook')
AX = Project(name='Helping Hospitalized Children Cope with Stress')
AY = Project(name='Out of Tune: Revamping the Chadwick Instrumental Program')
AZ = Project(name='Solar Freakin Umbrellas: Implementing Solar Technology at Chadwick')
BA = Project(name='A Salute to Service Dogs')
BB = Project(name='Go the Frick to Sleep, You Fricking Fricks')
BC = Project(name='Not just a Brazilian Butt Workout: Another Type of Workout Vide')
BD = Project(name='Dancing in the rain during a drought: a water conservation guide for daily life')
BE = Project(name='From Assistants to Physicists: The Pursuit of Equality in STEM')
BF = Project(name='Guys And Dolls: A Look At Gendered Marketing Of Childrens Products')
BG = Project(name='Color Your Way Towards Happiness')
BH = Project(name='The California Coastline Takeover: Invasive Seaweed')
BI = Project(name='There Will Be Blood: Preventing Type 1 Diabetes Misdiagnosis')
BJ = Project(name='Stamping out Sexism in the Elementary School Classroom')
BK = Project(name='Capture Water Before it Goes')
BL = Project(name='Spotlight on the Students: Fostering Creativity in Chadwicks Stage Crew')
BM = Project(name='Why Should You be Grateful for Chadwick?')
BN = Project(name='Zoos: Born to be Wild')
BO = Project(name='How Many Bunnies Died for your Chapstick? Exposing Animal Testing in Cosmetics')
BP = Project(name='The ART of De-Stressing: Using Creativity to Promote Wellness')
BQ = Project(name='F#### of S####: What Can You Legally Say On Chadwicks Campus?')
BR = Project(name='Building Relationship with Children in Foster Care')
BS = Project(name='Protecting the Protected: Safeguarding Marine Protected Areas')
BT = Project(name='Infusing Objectivity and Individualism into Educating the Global Citizen')
BU = Project(name='Balancing the Numbers:  Supporting Female Engineers at Chadwick')
BV = Project(name='Are you a boy, girl, or other?: The importance of gender inclusion at school')
BW = Project(name='Empowering Girls in India Through Education')
BX = Project(name='Putting the Anti in Antibiotic Meat: The Pitfalls of Antibiotic Usage in Livestock Farming for Human Health and the Environment')
BY = Project(name='Protect Yourself Before You Wreck Yourself: The Dangers of Lifelong Sun Damage')
BZ = Project(name='Meditation: Methods to relieve stress and improve personal condition')
CA = Project(name='Fake News: the Cancer of Our Democracy')
CB = Project(name='What Happens To Homeless Pets In Our World')
CC = Project(name='Media and User Bias in the Digital Age: What You Can Do to Beat It')
CD = Project(name='Click on Sustainability: Reducing Your Carbon Footprint in Los Angeles')
CE = Project(name='Why Excessive Homework is Bad for High School Students')
CF = Project(name='Oh Brother!: The Conveniences and Costs of Mass Surveillance')
CG = Project(name='The Myth of Car Idling')
CH = Project(name='Need a hand? Providing a list of babysitters for families dealing with pediatric cancer')
CI = Project(name='"Youre So Pretty for a Black Girl": The Problem With White Beauty Ideals')
CJ = Project(name='Addressing Homelessness in My Community')
CK = Project(name='Mental Health: What do All Faculty Need to Know')
CL = Project(name='Healthy Habits To-Go: Ways to Efficiently Maintain a Balanced Lifestyle')
CM = Project(name='Addressing the Systemic Risk of the Big Three: Depression, Anxiety, and Drug Abuse')
CN = Project(name='The Quality of Life in Spinal Muscular Atrophy Children')
CO = Project(name='Kids These Days: Why Arent They Active?')
CP = Project(name='This Book Could Change Your Life: Combating Homophobia One Book at a Time')
CQ = Project(name='The Importance of Media Literacy in the Digital Age')
CR = Project(name='Apex under a Microscope: Employing Empathy to Ensure the Success of Chadwick Apex Projects')
CS = Project(name='Expanding the Admirals Role in the Chadwick Community')
none = Project(name='Not Matched')

session.add(A)
session.add(B)
session.add(C)
session.add(D)
session.add(E)
session.add(H)
session.add(I)
session.add(J)
session.add(K)
session.add(L)
session.add(M)
session.add(N)
session.add(O)
session.add(P)
session.add(Q)
session.add(R)
session.add(S)
session.add(T)
session.add(U)
session.add(V)
session.add(W)
session.add(X)
session.add(Y)
session.add(Z)
session.add(AA)
session.add(AB)
session.add(AC)
session.add(AD)
session.add(AE)
session.add(AF)
session.add(AG)
session.add(AH)
session.add(AI)
session.add(AJ)
session.add(AK)
session.add(AL)
session.add(AM)
session.add(AN)
session.add(AO)
session.add(AP)
session.add(AQ)
session.add(AR)
session.add(AS)
session.add(AT)
session.add(AU)
session.add(AV)
session.add(AW)
session.add(AX)
session.add(AY)
session.add(AZ)
session.add(BA)
session.add(BB)
session.add(BC)
session.add(BD)
session.add(BE)
session.add(BF)
session.add(BG)
session.add(BH)
session.add(BI)
session.add(BJ)
session.add(BK)
session.add(BL)
session.add(BM)
session.add(BN)
session.add(BO)
session.add(BP)
session.add(BQ)
session.add(BR)
session.add(BS)
session.add(BT)
session.add(BU)
session.add(BV)
session.add(BW)
session.add(BX)
session.add(BY)
session.add(BZ)
session.add(CA)
session.add(CB)
session.add(CC)
session.add(CD)
session.add(CE)
session.add(CF)
session.add(CG)
session.add(CH)
session.add(CI)
session.add(CJ)
session.add(CK)
session.add(CL)
session.add(CM)
session.add(CN)
session.add(CO)
session.add(CP)
session.add(CQ)
session.add(CR)
session.add(CS)
session.add(CT)
session.add(CU)
session.add(CV)
session.add(CW)
session.add(CX)

session.commit()

# session.bulk_save_objects(object)
# session.commit()

"""Create and add all students to database"""

# def add_student():
#     student = new_student_by_index(0)
#     with session_context(session_factory) as dbsession:
#         dbsession.add(person)

MYogi =Student(Name= 'Matthew_Yogi ', email=MYogi, matched=0)
RSullivan =Student(Name= 'Ryan_Sullivan ', email=RSullivan, matched=0)
MLesser =Student(Name= 'Matthew_Lesser ', email=MLesser, matched=0)
NTanios =Student(Name= 'Natalie_Tanios ', email=NTanios, matched=0)
KKunesh =Student(Name= 'Katie_Kunesh ', email=KKunesh, matched=0)
PFreer =Student(Name= 'Paige_Freer ', email=PFreer, matched=0)
NMester =Student(Name= 'Nate_Mester ', email=NMester, matched=0)
DGoldsmith =Student(Name= 'Dawson_Goldsmith ', email=DGoldsmith, matched=0)
WWagner =Student(Name= 'Wyatt_Wagner ', email=WWagner, matched=0)
JJeong =Student(Name= 'Jacob_Jeong ', email=JJeong, matched=0)
DMoore =Student(Name= 'David_Moore ', email=DMoore, matched=0)
CArmour =Student(Name= 'Caroline_Armour ', email=CArmour, matched=0)
RAbrahamson =Student(Name= 'Rachel_Abrahamson ', email=RAbrahamson, matched=0)
atetreault =Student(Name= 'alden_tetreault ', email=atetreault, matched=0)
ABrown =Student(Name= 'Andrew_Brown ', email=ABrown, matched=0)
CHobart =Student(Name= 'Charlie_Hobart ', email=CHobart, matched=0)
Nkathuria =Student(Name= 'Nikhil_kathuria ', email=Nkathuria, matched=0)
SKim =Student(Name= 'Stephanie_Kim ', email=SKim, matched=0)
MChildress =Student(Name= 'Monique_Childress ', email=MChildress, matched=0)
NMester =Student(Name= 'Nate_Mester ', email=NMester, matched=0)
GHo =Student(Name= 'Grant_Ho ', email=GHo, matched=0)
ADonley =Student(Name= 'Alana_Donley ', email=ADonley, matched=0)
SKim =Student(Name= 'Stephanie_Kim ', email=SKim, matched=0)
GLewin =Student(Name= 'Geoff_Lewin ', email=GLewin, matched=0)
DMalone =Student(Name= 'David_Malone ', email=DMalone, matched=0)
ETaulli =Student(Name= 'Emma_Taulli ', email=ETaulli, matched=0)
JMoorefield =Student(Name= 'Julia_Moorefield ', email=JMoorefield, matched=0)
ODulai =Student(Name= 'Olivia_Dulai ', email=ODulai, matched=0)
MMcGovern =Student(Name= 'Marisa_McGovern ', email=MMcGovern, matched=0)
BLamb =Student(Name= 'Brooke_Lamb ', email=BLamb, matched=0)
SKrieger =Student(Name= 'Seth_Krieger ', email=SKrieger, matched=0)
THorne =Student(Name= 'Taylor_Horne ', email=THorne, matched=0)
CIrawan =Student(Name= 'Claire_Irawan ', email=CIrawan, matched=0)
SHingorani =Student(Name= 'Serena_Hingorani ', email=SHingorani, matched=0)
ssherman =Student(Name= 'sarah_sherman ', email=ssherman, matched=0)
RHom =Student(Name= 'Ryan_Hom ', email=RHom, matched=0)
TGurbach =Student(Name= 'Taryn_Gurbach ', email=TGurbach, matched=0)
AKim =Student(Name= 'Anthony_Kim ', email=AKim, matched=0)
AKessaris =Student(Name= 'Amanda_Kessaris ', email=AKessaris, matched=0)
Hzilmer =Student(Name= 'Haan_zilmer ', email=Hzilmer, matched=0)
PLane =Student(Name= 'Patrick_Lane ', email=PLane, matched=0)
Ggeist =Student(Name= 'Gemma_geist ', email=Ggeist, matched=0)
NRizika =Student(Name= 'Noah_Rizika ', email=NRizika, matched=0)
AAmberg =Student(Name= 'Aidan_Amberg ', email=AAmberg, matched=0)
ACarter =Student(Name= 'Aidan_Carter ', email=ACarter, matched=0)
JHandler =Student(Name= 'Julian_Handler ', email=JHandler, matched=0)
JLi =Student(Name= 'Jie_Li ', email=JLi, matched=0)
MZiegler =Student(Name= 'Michael_Ziegler ', email=MZiegler, matched=0)
MWalls =Student(Name= 'Milana_Walls ', email=MWalls, matched=0)
MWilliams =Student(Name= 'Martha_Williams ', email=MWilliams, matched=0)
VMody =Student(Name= 'Vikash_Mody ', email=VMody, matched=0)
JCastleman =Student(Name= 'Jake_Castleman ', email=JCastleman, matched=0)
WBurleson =Student(Name= 'Wade_Burleson ', email=WBurleson, matched=0)
SHurst =Student(Name= 'Spencer_Hurst ', email=SHurst, matched=0)
CLin =Student(Name= 'Chloe_Lin ', email=CLin, matched=0)
ATyssee =Student(Name= 'Aidan_Tyssee ', email=ATyssee, matched=0)
ASopp =Student(Name= 'Allie_Sopp ', email=ASopp, matched=0)
ACoomans =Student(Name= 'Anna_Coomans ', email=ACoomans, matched=0)
TKoo =Student(Name= 'Tess_Koo ', email=TKoo, matched=0)
KChambers =Student(Name= 'KC_Chambers ', email=KChambers, matched=0)
aeggers =Student(Name= 'ally_eggers ', email=aeggers, matched=0)
EFuire =Student(Name= 'Elizabeth_Fuire ', email=EFuire, matched=0)
ADavisson =Student(Name= 'Alex_Davisson ', email=ADavisson, matched=0)
Hgordon =Student(Name= 'Hayley_gordon ', email=Hgordon, matched=0)
JDulai =Student(Name= 'Jacob_Dulai ', email=JDulai, matched=0)
Jwong =Student(Name= 'Jordan_wong ', email=Jwong, matched=0)
MBradshaw =Student(Name= 'Margot_Bradshaw ', email=MBradshaw, matched=0)
MBort =Student(Name= 'Melanie_Bort ', email=MBort, matched=0)
KTrinh =Student(Name= 'Katie_Trinh ', email=KTrinh, matched=0)
THorne =Student(Name= 'Taylor_Horne ', email=THorne, matched=0)
MSood =Student(Name= 'Meera_Sood ', email=MSood, matched=0)
MEdwards =Student(Name= 'Mateus_Edwards ', email=MEdwards, matched=0)
ETaylor =Student(Name= 'Ellie_Taylor ', email=ETaylor, matched=0)
AMadhani =Student(Name= 'Arysha_Madhani ', email=AMadhani, matched=0)
MSmith =Student(Name= 'Mia_Smith ', email=MSmith, matched=0)
JConnelly =Student(Name= 'Jack_Connelly ', email=JConnelly, matched=0)
CDavodi =Student(Name= 'Cameron_Davodi ', email=CDavodi, matched=0)
NAnaya =Student(Name= 'Noelle_Anaya ', email=NAnaya, matched=0)
MDavis =Student(Name= 'Madison_Davis ', email=MDavis, matched=0)
NNordine =Student(Name= 'Nate_Nordine ', email=NNordine, matched=0)
HGordon =Student(Name= 'Hannah_Gordon ', email=HGordon, matched=0)
JAmaral =Student(Name= 'Jasmine_Amaral ', email=JAmaral, matched=0)
TWinter =Student(Name= 'Thomas_Winter ', email=TWinter, matched=0)
REvans =Student(Name= 'Rob_Evans ', email=REvans, matched=0)
KWhite =Student(Name= 'Klark_White ', email=KWhite, matched=0)
PSpann =Student(Name= 'Patrick_Spann ', email=PSpann, matched=0)
MSegal =Student(Name= 'Meagan_Segal ', email=MSegal, matched=0)
VRanparia =Student(Name= 'Valmik_Ranparia ', email=VRanparia, matched=0)
KAroesty =Student(Name= 'Kaeley_Aroesty ', email=KAroesty, matched=0)
keu =Student(Name= 'katie_eu ', email=keu, matched=0)
KSopp =Student(Name= 'Katie_Sopp ', email=KSopp, matched=0)
AGray =Student(Name= 'Alissa_Gray ', email=AGray, matched=0)
JNeill =Student(Name= 'John_Neill ', email=JNeill, matched=0)
SPeri =Student(Name= 'Sam_Peri ', email=SPeri, matched=0)
MMasuda =Student(Name= 'Mitchell_Masuda ', email=MMasuda, matched=0)
ASimpson =Student(Name= 'Ashley_Simpson ', email=ASimpson, matched=0)
J =Student(Name= 'Jatearoon_ ', email=J, matched=0)
NHuh =Student(Name= 'Nicole_Huh ', email=NHuh, matched=0)
LKim =Student(Name= 'Lynn_Kim ', email=LKim, matched=0)
CBruni =Student(Name= 'Christina_Bruni ', email=CBruni, matched=0)
SGeorge =Student(Name= 'Sophia_George ', email=SGeorge, matched=0)
JRawda =Student(Name= 'Jordan_Rawda ', email=JRawda, matched=0)
AVera =Student(Name= 'Adrian_Vera ', email=AVera, matched=0)
Jweiss =Student(Name= 'Jack_weiss ', email=Jweiss, matched=0)
CThompson =Student(Name= 'Chantell_Thompson ', email=CThompson, matched=0)
JAllen =Student(Name= 'Jesse_Allen ', email=JAllen, matched=0)
CMoskowitz =Student(Name= 'Caden_Moskowitz ', email=CMoskowitz, matched=0)
CToups =Student(Name= 'Connor_Toups ', email=CToups, matched=0)
GMartinez =Student(Name= 'Gabi_Martinez ', email=GMartinez, matched=0)
MTchen =Student(Name= 'Marin_Tchen ', email=MTchen, matched=0)
AReisig =Student(Name= 'Aidan_Reisig ', email=AReisig, matched=0)
CPoitras =Student(Name= 'Chantal_Poitras ', email=CPoitras, matched=0)
MBuchanan =Student(Name= 'Mary_Buchanan ', email=MBuchanan, matched=0)
EFukunaga =Student(Name= 'Emma_Fukunaga ', email=EFukunaga, matched=0)
RKim =Student(Name= 'Ryan_Kim ', email=RKim, matched=0)
SdeGyarfas =Student(Name= 'Samantha_deGyarfas ', email=SdeGyarfas, matched=0)
MElliott =Student(Name= 'Mia_Elliott ', email=MElliott, matched=0)
BRegan =Student(Name= 'Bryan_Regan ', email=BRegan, matched=0)
FGlantz =Student(Name= 'Frank_Glantz ', email=FGlantz, matched=0)
CBreus =Student(Name= 'Cooper_Breus ', email=CBreus, matched=0)
LDyson =Student(Name= 'Landon_Dyson ', email=LDyson, matched=0)
ECastillo =Student(Name= 'Elmer_Castillo ', email=ECastillo, matched=0)
KDoody =Student(Name= 'Kaiden_Doody ', email=KDoody, matched=0)
HGoldsmith =Student(Name= 'Hailie_Goldsmith ', email=HGoldsmith, matched=0)
Jyang =Student(Name= 'Jordan_yang ', email=Jyang, matched=0)
Rmacquarrie =Student(Name= 'Russell_macquarrie ', email=Rmacquarrie, matched=0)
AWhite =Student(Name= 'Albert_White ', email=AWhite, matched=0)
CZak =Student(Name= 'Christine_Zak ', email=CZak, matched=0)
GWaller =Student(Name= 'Grace_Waller ', email=GWaller, matched=0)
JWohl =Student(Name= 'Jonathan_Wohl ', email=JWohl, matched=0)
BHarrington =Student(Name= 'Brad_Harrington ', email=BHarrington, matched=0)
JNachman =Student(Name= 'Jared_Nachman ', email=JNachman, matched=0)
BSimpson =Student(Name= 'Brooke_Simpson ', email=BSimpson, matched=0)
AChowdhury =Student(Name= 'Anandi_Chowdhury ', email=AChowdhury, matched=0)
AMichels =Student(Name= 'Ana_Michels ', email=AMichels, matched=0)
LWagner =Student(Name= 'Luke_Wagner ', email=LWagner, matched=0)
LThomson =Student(Name= 'Lauren_Thomson ', email=LThomson, matched=0)
CWong =Student(Name= 'Casey_Wong ', email=CWong, matched=0)
ASchulten =Student(Name= 'Alexa_Schulten ', email=ASchulten, matched=0)
THale =Student(Name= 'Tucker_Hale ', email=THale, matched=0)
JBenjamin =Student(Name= 'Josie_Benjamin ', email=JBenjamin, matched=0)
LProctor =Student(Name= 'Lola_Proctor ', email=LProctor, matched=0)
LTong =Student(Name= 'Lauren_Tong ', email=LTong, matched=0)
CSakaguchi =Student(Name= 'Cooper_Sakaguchi ', email=CSakaguchi, matched=0)
DNguyen =Student(Name= 'Dylan_Nguyen ', email=DNguyen, matched=0)
BNgan =Student(Name= 'Brian_Ngan ', email=BNgan, matched=0)
GGentry =Student(Name= 'Grace_Gentry ', email=GGentry, matched=0)
HArnett =Student(Name= 'Hope_Arnett ', email=HArnett, matched=0)
CHoward =Student(Name= 'Christopher_Howard ', email=CHoward, matched=0)
SChung =Student(Name= 'Sam_Chung ', email=SChung, matched=0)
MRenslo =Student(Name= 'Michelle_Renslo ', email=MRenslo, matched=0)
SRivas =Student(Name= 'Samuel_Rivas ', email=SRivas, matched=0)
MBrandmeyer =Student(Name= 'Morgan_Brandmeyer ', email=MBrandmeyer, matched=0)
MMedrano =Student(Name= 'Moises_Medrano ', email=MMedrano, matched=0)
JHuh =Student(Name= 'Jenny_Huh ', email=JHuh, matched=0)
KChase =Student(Name= 'Kaylen_Chase ', email=KChase, matched=0)
MBernadett =Student(Name= 'Mary_Bernadett ', email=MBernadett, matched=0)
OVarady =Student(Name= 'Olivea_Varady ', email=OVarady, matched=0)
CWooten =Student(Name= 'Casie_Wooten ', email=CWooten, matched=0)
NKeesey =Student(Name= 'Nick_Keesey ', email=NKeesey, matched=0)
RGealer =Student(Name= 'Rachel_Gealer ', email=RGealer, matched=0)
JZhang =Student(Name= 'Jeffrey_Zhang ', email=JZhang, matched=0)
REmelle =Student(Name= 'Ryan_Emelle ', email=REmelle, matched=0)
JLee =Student(Name= 'Justin_Lee ', email=JLee, matched=0)
RFreer =Student(Name= 'Rachel_Freer ', email=RFreer, matched=0)
MShah =Student(Name= 'Manas_Shah ', email=MShah, matched=0)
JGuzman =Student(Name= 'Josiah_Guzman ', email=JGuzman, matched=0)
DLindsey =Student(Name= 'Duke_Lindsey ', email=DLindsey, matched=0)
MGradney =Student(Name= 'Madeleine_Gradney ', email=MGradney, matched=0)
SChung =Student(Name= 'Sophia_Chung ', email=SChung, matched=0)
MHuang =Student(Name= 'Michael_Huang ', email=MHuang, matched=0)
JRand =Student(Name= 'Jordyn_Rand ', email=JRand, matched=0)
Abaronsky =Student(Name= 'Anna_baronsky ', email=Abaronsky, matched=0)
cboiler =Student(Name= 'charlie_boiler ', email=cboiler, matched=0)
CKeesey =Student(Name= 'Christopher_Keesey ', email=CKeesey, matched=0)
RDominguez =Student(Name= 'Robert_Dominguez ', email=RDominguez, matched=0)
BBaldridge =Student(Name= 'Bryce_Baldridge ', email=BBaldridge, matched=0)
VCho =Student(Name= 'Valerie_Cho ', email=VCho, matched=0)
JLin =Student(Name= 'Jonathan_Lin ', email=JLin, matched=0)
CLeach =Student(Name= 'Connor_Leach ', email=CLeach, matched=0)
GKhalil =Student(Name= 'Gibran_Khalil ', email=GKhalil, matched=0)
CWolf =Student(Name= 'Caitlin_Wolf ', email=CWolf, matched=0)
KBorden =Student(Name= 'Kate_Borden ', email=KBorden, matched=0)
FDeGiorgio =Student(Name= 'Francesca_DeGiorgio ', email=FDeGiorgio, matched=0)
RCameron =Student(Name= 'Race_Cameron ', email=RCameron, matched=0)
EMirovski =Student(Name= 'Eitan_Mirovski ', email=EMirovski, matched=0)
HGoodloe =Student(Name= 'Hannah_Goodloe ', email=HGoodloe, matched=0)
NTell =Student(Name= 'Nick_Tell ', email=NTell, matched=0)
AZheng =Student(Name= 'Amber_Zheng ', email=AZheng, matched=0)
TShim =Student(Name= 'Taesun_Shim ', email=TShim, matched=0)
EShaw =Student(Name= 'Emily_Shaw ', email=EShaw, matched=0)
SBarry =Student(Name= 'Sydney_Barry ', email=SBarry, matched=0)
SHughes =Student(Name= 'Sophia_Hughes ', email=SHughes, matched=0)
MDinnegan =Student(Name= 'Megan_Dinnegan ', email=MDinnegan, matched=0)
MRosenzweig =Student(Name= 'Myles_Rosenzweig ', email=MRosenzweig, matched=0)
JKole =Student(Name= 'Jeremy_Kole ', email=JKole, matched=0)
RKennedy =Student(Name= 'Ryan_Kennedy ', email=RKennedy, matched=0)
AZhou =Student(Name= 'Amy_Zhou ', email=AZhou, matched=0)
GGay =Student(Name= 'Grace_Gay ', email=GGay, matched=0)
LHill =Student(Name= 'Lily_Hill ', email=LHill, matched=0)
ARosso =Student(Name= 'Alex_Rosso ', email=ARosso, matched=0)
MHodgkiss =Student(Name= 'Mike_Hodgkiss ', email=MHodgkiss, matched=0)
CCastagne =Student(Name= 'Christopher_Castagne ', email=CCastagne, matched=0)
MDimson =Student(Name= 'Mia_Dimson ', email=MDimson, matched=0)
AHe =Student(Name= 'Angel_He ', email=AHe, matched=0)
SCHung =Student(Name= 'Shannon_CHung ', email=SCHung, matched=0)
ABagabo =Student(Name= 'Amara_Bagabo ', email=ABagabo, matched=0)
JSoldera =Student(Name= 'Jake_Soldera ', email=JSoldera, matched=0)
CSpennato =Student(Name= 'Christina_Spennato ', email=CSpennato, matched=0)
MPacifico =Student(Name= 'Maria_Pacifico ', email=MPacifico, matched=0)
ASimpson =Student(Name= 'Aidan_Simpson ', email=ASimpson, matched=0)
LMJ =Student(Name= 'Lexy_MJ ', email=LMJ, matched=0)
SKrasne =Student(Name= 'Samantha_Krasne ', email=SKrasne, matched=0)
bbrown =Student(Name= 'benjamin_brown ', email=bbrown, matched=0)
JBerenato =Student(Name= 'John_Berenato ', email=JBerenato, matched=0)
AMoya =Student(Name= 'Alex_Moya ', email=AMoya, matched=0)
NLonghurst =Student(Name= 'Nick_Longhurst ', email=NLonghurst, matched=0)
HLennertz =Student(Name= 'Harrison_Lennertz ', email=HLennertz, matched=0)
JHeisler =Student(Name= 'Jacob_Heisler ', email=JHeisler, matched=0)
CSmith =Student(Name= 'Caroline_Smith ', email=CSmith, matched=0)
RKocarslan =Student(Name= 'Reyna_Kocarslan ', email=RKocarslan, matched=0)
SJung =Student(Name= 'Stacey_Jung ', email=SJung, matched=0)
AMenzelos =Student(Name= 'Arianna_Menzelos ', email=AMenzelos, matched=0)
TRizika =Student(Name= 'Talia_Rizika ', email=TRizika, matched=0)
CProctor =Student(Name= 'Claudette_Proctor ', email=CProctor, matched=0)
ABerenato =Student(Name= 'Annamaria_Berenato ', email=ABerenato, matched=0)
MKripalani =Student(Name= 'Marisa_Kripalani ', email=MKripalani, matched=0)
RNing =Student(Name= 'Rafael_Ning ', email=RNing, matched=0)
HKoontz =Student(Name= 'Hunter_Koontz ', email=HKoontz, matched=0)
AElliott =Student(Name= 'Amanda_Elliott ', email=AElliott, matched=0)
EDavis =Student(Name= 'Elizabeth_Davis ', email=EDavis, matched=0)
ASchwake =Student(Name= 'Alexa_Schwake ', email=ASchwake, matched=0)
JFranklin =Student(Name= 'James_Franklin ', email=JFranklin, matched=0)
BLaird =Student(Name= 'Bronson_Laird ', email=BLaird, matched=0)
AKirkpatrick =Student(Name= 'Allie_Kirkpatrick ', email=AKirkpatrick, matched=0)
HFreni =Student(Name= 'Harrison_Freni ', email=HFreni, matched=0)
KCorbalis =Student(Name= 'Kira_Corbalis ', email=KCorbalis, matched=0)
RMack =Student(Name= 'Robert_Mack ', email=RMack, matched=0)
JDoi =Student(Name= 'Jennifer_Doi ', email=JDoi, matched=0)
GArcangeli =Student(Name= 'Gabriela_Arcangeli ', email=GArcangeli, matched=0)
GThomas =Student(Name= 'Gracey_Thomas ', email=GThomas, matched=0)
ODalton =Student(Name= 'Olivia_Dalton ', email=ODalton, matched=0)
AWestley =Student(Name= 'Allison_Westley ', email=AWestley, matched=0)
SAliu =Student(Name= 'Sekinat_Aliu ', email=SAliu, matched=0)
Cwallace =Student(Name= 'Caleigh_wallace ', email=Cwallace, matched=0)
SBernstein =Student(Name= 'Sammy_Bernstein ', email=SBernstein, matched=0)
NBogert =Student(Name= 'Natalie_Bogert ', email=NBogert, matched=0)
JMerkin =Student(Name= 'Joey_Merkin ', email=JMerkin, matched=0)
HBruni =Student(Name= 'Harrison_Bruni ', email=HBruni, matched=0)
CMihm =Student(Name= 'Catie_Mihm ', email=CMihm, matched=0)
JAlexander =Student(Name= 'Jailah_Alexander ', email=JAlexander, matched=0)
KHui-Bon-Hoa =Student(Name= 'Kate_Hui-Bon-Hoa ', email=KHui-Bon-Hoa, matched=0)
KChappell =Student(Name= 'Kate_Chappell ', email=KChappell, matched=0)
PHui-Bon-Hoa =Student(Name= 'Phillip_Hui-Bon-Hoa ', email=PHui-Bon-Hoa, matched=0)
SReevs =Student(Name= 'Sarah_Reevs ', email=SReevs, matched=0)
AHale =Student(Name= 'Annie_Hale ', email=AHale, matched=0)
KGoy =Student(Name= 'Krissi_Goy ', email=KGoy, matched=0)
PElliott =Student(Name= 'Paige_Elliott ', email=PElliott, matched=0)
ITaulli =Student(Name= 'Izzy_Taulli ', email=ITaulli, matched=0)
MAbad =Student(Name= 'Michael_Abad ', email=MAbad, matched=0)
MGood =Student(Name= 'Matthew_Good ', email=MGood, matched=0)
NCorrea =Student(Name= 'Natalie_Correa ', email=NCorrea, matched=0)
JAgnew =Student(Name= 'James_Agnew ', email=JAgnew, matched=0)
THwang =Student(Name= 'Taylor_Hwang ', email=THwang, matched=0)
KGarrett =Student(Name= 'Katie_Garrett ', email=KGarrett, matched=0)
AStary =Student(Name= 'Allison_Stary ', email=AStary, matched=0)
OFoster =Student(Name= 'Owen_Foster ', email=OFoster, matched=0)
NCoomans =Student(Name= 'Natalie_Coomans ', email=NCoomans, matched=0)
NFox =Student(Name= 'Natalie_Fox ', email=NFox, matched=0)
TRitter =Student(Name= 'Tristan_Ritter ', email=TRitter, matched=0)
CYoon =Student(Name= 'Christy_Yoon ', email=CYoon, matched=0)
JHoot =Student(Name= 'Jacquie_Hoot ', email=JHoot, matched=0)
JAroesty =Student(Name= 'Justin_Aroesty ', email=JAroesty, matched=0)
EPark =Student(Name= 'Edward_Park ', email=EPark, matched=0)
MSung =Student(Name= 'Maia_Sung ', email=MSung, matched=0)
EFoster =Student(Name= 'Emmett_Foster ', email=EFoster, matched=0)
ARadell =Student(Name= 'Avalon_Radell ', email=ARadell, matched=0)
CFrey =Student(Name= 'CB_Frey ', email=CFrey, matched=0)
EReisig =Student(Name= 'Emma_Reisig ', email=EReisig, matched=0)
JChao =Student(Name= 'James_Chao ', email=JChao, matched=0)
FHarmon =Student(Name= 'Frederique_Harmon ', email=FHarmon, matched=0)
ESiddons =Student(Name= 'Emmie_Siddons ', email=ESiddons, matched=0)
HWatson =Student(Name= 'Haleigh_Watson ', email=HWatson, matched=0)
DDing =Student(Name= 'Darren_Ding ', email=DDing, matched=0)
DSuh =Student(Name= 'Daphne_Suh ', email=DSuh, matched=0)
SBeshke =Student(Name= 'Sarah_Beshke ', email=SBeshke, matched=0)
TJoshi =Student(Name= 'Tej_Joshi ', email=TJoshi, matched=0)
NLinden =Student(Name= 'Neville_Linden ', email=NLinden, matched=0)
PCarter =Student(Name= 'Paige_Carter ', email=PCarter, matched=0)
DBishop =Student(Name= 'Dean_Bishop ', email=DBishop, matched=0)
SBogen =Student(Name= 'Sam_Bogen ', email=SBogen, matched=0)
DHoule =Student(Name= 'Daisy_Houle ', email=DHoule, matched=0)
TGurbach =Student(Name= 'Taryn_Gurbach ', email=TGurbach, matched=0)
ABuchanan =Student(Name= 'Andrew_Buchanan ', email=ABuchanan, matched=0)
KWhite =Student(Name= 'Klark_White ', email=KWhite, matched=0)
SZukerman =Student(Name= 'Sean_Zukerman ', email=SZukerman, matched=0)
NRizika =Student(Name= 'Noah_Rizika ', email=NRizika, matched=0)
RGracie =Student(Name= 'Roran_Gracie ', email=RGracie, matched=0)
CAxtell =Student(Name= 'Chase_Axtell ', email=CAxtell, matched=0)
SLevy =Student(Name= 'Sammy_Levy ', email=SLevy, matched=0)
VAngelow =Student(Name= 'Vetta_Angelow ', email=VAngelow, matched=0)
MSmith =Student(Name= 'Mia_Smith ', email=MSmith, matched=0)
ACoward =Student(Name= 'Allison_Coward ', email=ACoward, matched=0)
IStamos =Student(Name= 'Ilias_Stamos ', email=IStamos, matched=0)
SBernstein =Student(Name= 'Sammy_Bernstein ', email=SBernstein, matched=0)
TPeters =Student(Name= 'Thomas_Peters ', email=TPeters, matched=0)
EDeVaughn =Student(Name= 'EJayy_DeVaughn ', email=EDeVaughn, matched=0)
ECortez =Student(Name= 'Evelyn_Cortez ', email=ECortez, matched=0)
AKim =Student(Name= 'Anthony_Kim ', email=AKim, matched=0)
CHobart =Student(Name= 'Charlie_Hobart ', email=CHobart, matched=0)
CChang =Student(Name= 'Cecilia_Chang ', email=CChang, matched=0)
CLenihan =Student(Name= 'Clare_Lenihan ', email=CLenihan, matched=0)
NBenson =Student(Name= 'Nick_Benson ', email=NBenson, matched=0)
MCorley =Student(Name= 'Morgan_Corley ', email=MCorley, matched=0)

session.add(MYogi)
session.add(RSullivan)
session.add(MLesser)
session.add(NTanios)
session.add(KKunesh)
session.add(PFreer)
session.add(NMester)
session.add(DGoldsmith)
session.add(WWagner)
session.add(JJeong)
session.add(DMoore)
session.add(CArmour)
session.add(RAbrahamson)
session.add(atetreault)
session.add(ABrown)
session.add(CHobart)
session.add(Nkathuria)
session.add(SKim)
session.add(MChildress)
session.add(NMester)
session.add(GHo)
session.add(ADonley)
session.add(SKim)
session.add(GLewin)
session.add(DMalone)
session.add(ETaulli)
session.add(JMoorefield)
session.add(ODulai)
session.add(MMcGovern)
session.add(BLamb)
session.add(SKrieger)
session.add(THorne)
session.add(CIrawan)
session.add(SHingorani)
session.add(ssherman)
session.add(RHom)
session.add(TGurbach)
session.add(AKim)
session.add(AKessaris)
session.add(Hzilmer)
session.add(PLane)
session.add(Ggeist)
session.add(NRizika)
session.add(AAmberg)
session.add(ACarter)
session.add(JHandler)
session.add(JLi)
session.add(MZiegler)
session.add(MWalls)
session.add(MWilliams)
session.add(VMody)
session.add(JCastleman)
session.add(WBurleson)
session.add(SHurst)
session.add(CLin)
session.add(ATyssee)
session.add(ASopp)
session.add(ACoomans)
session.add(TKoo)
session.add(KChambers)
session.add(aeggers)
session.add(EFuire)
session.add(ADavisson)
session.add(Hgordon)
session.add(JDulai)
session.add(Jwong)
session.add(MBradshaw)
session.add(MBort)
session.add(KTrinh)
session.add(THorne)
session.add(MSood)
session.add(MEdwards)
session.add(ETaylor)
session.add(AMadhani)
session.add(MSmith)
session.add(JConnelly)
session.add(CDavodi)
session.add(NAnaya)
session.add(MDavis)
session.add(NNordine)
session.add(HGordon)
session.add(JAmaral)
session.add(TWinter)
session.add(REvans)
session.add(KWhite)
session.add(PSpann)
session.add(MSegal)
session.add(VRanparia)
session.add(KAroesty)
session.add(keu)
session.add(KSopp)
session.add(AGray)
session.add(JNeill)
session.add(SPeri)
session.add(MMasuda)
session.add(ASimpson)
session.add(J)
session.add(NHuh)
session.add(LKim)
session.add(CBruni)
session.add(SGeorge)
session.add(JRawda)
session.add(AVera)
session.add(Jweiss)
session.add(CThompson)
session.add(JAllen)
session.add(CMoskowitz)
session.add(CToups)
session.add(GMartinez)
session.add(MTchen)
session.add(AReisig)
session.add(CPoitras)
session.add(MBuchanan)
session.add(EFukunaga)
session.add(RKim)
session.add(SdeGyarfas)
session.add(MElliott)
session.add(BRegan)
session.add(FGlantz)
session.add(CBreus)
session.add(LDyson)
session.add(ECastillo)
session.add(KDoody)
session.add(HGoldsmith)
session.add(Jyang)
session.add(Rmacquarrie)
session.add(AWhite)
session.add(CZak)
session.add(GWaller)
session.add(JWohl)
session.add(BHarrington)
session.add(JNachman)
session.add(BSimpson)
session.add(AChowdhury)
session.add(AMichels)
session.add(LWagner)
session.add(LThomson)
session.add(CWong)
session.add(ASchulten)
session.add(THale)
session.add(JBenjamin)
session.add(LProctor)
session.add(LTong)
session.add(CSakaguchi)
session.add(DNguyen)
session.add(BNgan)
session.add(GGentry)
session.add(HArnett)
session.add(CHoward)
session.add(SChung)
session.add(MRenslo)
session.add(SRivas)
session.add(MBrandmeyer)
session.add(MMedrano)
session.add(JHuh)
session.add(KChase)
session.add(MBernadett)
session.add(OVarady)
session.add(CWooten)
session.add(NKeesey)
session.add(RGealer)
session.add(JZhang)
session.add(REmelle)
session.add(JLee)
session.add(RFreer)
session.add(MShah)
session.add(JGuzman)
session.add(DLindsey)
session.add(MGradney)
session.add(SChung)
session.add(MHuang)
session.add(JRand)
session.add(Abaronsky)
session.add(cboiler)
session.add(CKeesey)
session.add(RDominguez)
session.add(BBaldridge)
session.add(VCho)
session.add(JLin)
session.add(CLeach)
session.add(GKhalil)
session.add(CWolf)
session.add(KBorden)
session.add(FDeGiorgio)
session.add(RCameron)
session.add(EMirovski)
session.add(HGoodloe)
session.add(NTell)
session.add(AZheng)
session.add(TShim)
session.add(EShaw)
session.add(SBarry)
session.add(SHughes)
session.add(MDinnegan)
session.add(MRosenzweig)
session.add(JKole)
session.add(RKennedy)
session.add(AZhou)
session.add(GGay)
session.add(LHill)
session.add(ARosso)
session.add(MHodgkiss)
session.add(CCastagne)
session.add(MDimson)
session.add(AHe)
session.add(SCHung)
session.add(ABagabo)
session.add(JSoldera)
session.add(CSpennato)
session.add(MPacifico)
session.add(ASimpson)
session.add(LMJ)
session.add(SKrasne)
session.add(bbrown)
session.add(JBerenato)
session.add(AMoya)
session.add(NLonghurst)
session.add(HLennertz)
session.add(JHeisler)
session.add(CSmith)
session.add(RKocarslan)
session.add(SJung)
session.add(AMenzelos)
session.add(TRizika)
session.add(CProctor)
session.add(ABerenato)
session.add(MKripalani)
session.add(RNing)
session.add(HKoontz)
session.add(AElliott)
session.add(EDavis)
session.add(ASchwake)
session.add(JFranklin)
session.add(BLaird)
session.add(AKirkpatrick)
session.add(HFreni)
session.add(KCorbalis)
session.add(RMack)
session.add(JDoi)
session.add(GArcangeli)
session.add(GThomas)
session.add(ODalton)
session.add(AWestley)
session.add(SAliu)
session.add(Cwallace)
session.add(SBernstein)
session.add(NBogert)
session.add(JMerkin)
session.add(HBruni)
session.add(CMihm)
session.add(JAlexander)
session.add(KHui-Bon-Hoa)
session.add(KChappell)
session.add(PHui-Bon-Hoa)
session.add(SReevs)
session.add(AHale)
session.add(KGoy)
session.add(PElliott)
session.add(ITaulli)
session.add(MAbad)
session.add(MGood)
session.add(NCorrea)
session.add(JAgnew)
session.add(THwang)
session.add(KGarrett)
session.add(AStary)
session.add(OFoster)
session.add(NCoomans)
session.add(NFox)
session.add(TRitter)
session.add(CYoon)
session.add(JHoot)
session.add(JAroesty)
session.add(EPark)
session.add(MSung)
session.add(EFoster)
session.add(ARadell)
session.add(CFrey)
session.add(EReisig)
session.add(JChao)
session.add(FHarmon)
session.add(ESiddons)
session.add(HWatson)
session.add(DDing)
session.add(DSuh)
session.add(SBeshke)
session.add(TJoshi)
session.add(NLinden)
session.add(PCarter)
session.add(DBishop)
session.add(SBogen)
session.add(DHoule)
session.add(TGurbach)
session.add(ABuchanan)
session.add(KWhite)
session.add(SZukerman)
session.add(NRizika)
session.add(RGracie)
session.add(CAxtell)
session.add(SLevy)
session.add(VAngelow)
session.add(MSmith)
session.add(ACoward)
session.add(IStamos)
session.add(SBernstein)
session.add(TPeters)
session.add(EDeVaughn)
session.add(ECortez)
session.add(AKim)
session.add(CHobart)
session.add(CChang)
session.add(CLenihan)
session.add(NBenson)
session.add(MCorley)


session.commit()
# def new_student_by_index(index, phone_number=None, email=None):
#     name, last_name = barnum.create_name()
#     student = Student(name=name, last_name=last_name)
#     return student

#instead of just first name you should do firstname_lastname

"""Create and add all prefs to database"""
Bob = session.query(Student).filter_by(name='1').one()
Bob_first_pref = Pref(pref_number=1, name="A", student_id=1, student=1)
Bob_second_pref = Pref(pref_number=2, name="D", student_id=1, student=1)
session.add(Bob_first_pref)
session.add(Bob_second_pref)
session.commit()
#you would need to go up to 4 prefs
